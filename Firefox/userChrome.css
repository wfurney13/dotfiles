@-moz-document url(chrome://browser/content/browser.xhtml) {
	/* tabs on bottom of window */
	/* requires that you set
	 * toolkit.legacyUserProfileCustomizations.stylesheets = true
	 * in about:config
	 */
	#main-window body { flex-direction: column-reverse !important; }
	#navigator-toolbox { flex-direction: column-reverse !important; }
	#urlbar {
		top: unset !important;
		bottom: calc((var(--urlbar-toolbar-height) - var(--urlbar-height)) / 2) !important;
		box-shadow: none !important;
		display: flex !important;
		flex-direction: column !important;
		font-family: 'Lekton Nerd Font Mono';
	}
	
	#urlbar-input-container {
		order: 2;
	}
	
	#personal-bookmarks {
		font-family: 'Lekton Nerd Font Mono';
	}
	#urlbar > .urlbarView {
		order: 1;
		border-bottom: 1px solid #666;
	}

	#urlbar-results {
		display: flex;
		flex-direction: column;
	}
	.search-one-offs { display: none !important; }
	.tab-background { border-top: none !important; }
	#navigator-toolbox::after { border: none; }
	#TabsToolbar .tabbrowser-arrowscrollbox,
	
	#tabbrowser-tabs, .tab-stack { min-height: 28px !important; }
	.tabbrowser-tab { font-size: 130%; }
	.tabbrowser-tab { font-family: 'Lekton Nerd Font Mono'; }

	.tab-content { padding: 0 5px; }
	.tab-close-button .toolbarbutton-icon { width: 12px !important; height: 12px !important; }


	toolbox[inFullscreen=true] { display: none; }
	/*
	 * the following makes it so that the on-click panels in the nav-bar
	 * extend upwards, not downwards. some of them are in the #mainPopupSet
	 * (hamburger + unified extensions), and the rest are in
	 * #navigator-toolbox. They all end up with an incorrectly-measured
	 * max-height (based on the distance to the _bottom_ of the screen), so
	 * we correct that. The ones in #navigator-toolbox then adjust their
	 * positioning automatically, so we can just set max-height. The ones
	 * in #mainPopupSet do _not_, and so we need to give them a
	 * negative margin-top to offset them *and* a fixed height so their
	 * bottoms align with the nav-bar. We also calc to ensure they don't
	 * end up overlapping with the nav-bar itself. The last bit around
	 * cui-widget-panelview is needed because "new"-style panels (those
	 * using "unified" panels) don't get flex by default, which results in
	 * them being the wrong height.
	 *
	 * Oh, yeah, and the popup-notification-panel (like biometrics prompts)
	 * of course follows different rules again, and needs its own special
	 * rule.
	 */
	#mainPopupSet panel.panel-no-padding { margin-top: calc(-50vh + 40px) !important; }
	#mainPopupSet .panel-viewstack, #mainPopupSet popupnotification { max-height: 50vh !important; height: 50vh; }
	#mainPopupSet panel.panel-no-padding.popup-notification-panel { margin-top: calc(-50vh - 35px) !important; }	
	#navigator-toolbox .panel-viewstack { max-height: 75vh !important; }
	panelview.cui-widget-panelview { flex: 1; }
	panelview.cui-widget-panelview > vbox { flex: 1; min-height: 50vh; }

/* STATUSPANEL INSIDE URLBAR */

/* This _v2 variant "replaces" the whole contents of the urlbar, including all icons,
   with statuspanel text when needed. The "normal" variant replaces only the url part. */

/**************
IMPORTANT WARNING
Using this style can lead to long tab switch times (and probably other problems). Everything may be fine when Firefox starts but situation gets gradually worse, although pretty slowly.
Relevant information: https://bugzilla.mozilla.org/show_bug.cgi?id=1496065
As a workaround, the -moz-element background image is removed somewhat often which seems work at first glance. But there might still be some related issues on really long sessions. Just be aware.
**************/

#urlbar::before{
	z-index: 2;
	content: "";
	display: block;
	position: absolute;
	pointer-events:none;
	background-repeat: no-repeat;
	background-image: -moz-element(#statuspanel);
	background-position: left 3px;
	inset: 1px;
}

/* Using -moz-element() causes some problems after Firefox has been running several hours such as long tab switch times. For this reason the background image is removed on hover and focused states which appears to clear the state. */

/* Hide the status ovelay when urlbar is hovered */
#urlbar:hover::before,
#urlbar[focused]::before{
	visibility: hidden;
	/* Remove the image to get rid of -moz-element() related problems */
  background-image: none !important;
}

:root[uidensity="compact"] #urlbar::before{ background-position-y: 0px }
:root[uidensity="touch"] #urlbar::before{ background-position-y: 3px }

#statuspanel-label{
	height:3em;
	min-width: calc(100vw);
	background-color: var(--toolbar-field-background-color) !important;
	border: none !important;
	font-size: 1.15em;
	color: inherit !important;
	margin-inline: 0px !important;
	padding-top: 3px !important;
}

/* If you use a theme where urlbar is partially transparent you should edit this color to something that closely matches the perceived color of urlbar. Or perhaps use background-image - linear-gradient() can work well here. But keep the color or image opaque or otherwise you'll face an issue where urlbar text bleeds through */
#statuspanel{ background-color: var(--toolbar-bgcolor) }

#statuspanel{
	color: var(--toolbar-field-color, black);
	z-index: -1;
	max-width: 100% !important;
	padding-top: 0 !important;
}
#statuspanel[type="status"] { color: Highlight }

/* This creates opaque layer to be shown in front of "hidden" real statuspanel */
.browserStack{
	background-color: var(--tabpanel-background-color);
}

/*  OPTIONAL FEATURES  */
/* Uncomment to enable */

/* Center the statuspanel text. This might be useful with centered urlbar text */
/*
#statuspanel-label{
  text-align: center;
  justify-content: center;
}
*/
.urlbar-input-box::after{ background-position-x: center !important; }

	
}



	

